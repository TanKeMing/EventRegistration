@page "/registrations/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Registration</h3>
<hr />
<br />
<FormComponent ButtonText="Create Registration" registration="registration"
               OnValidSubmit="@CreateRegistration" />
@*<EditForm Model="@registration" OnValidSubmit="CreateRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Registration time: </label>
        <div>
            <InputText @bind-Value="@registration.Registrationtime" class="form-control" />
            <ValidationMessage For="@(() => registration.Registrationtime)" />
        </div>
    </div>

    <div class="form-group">
        <label>Registration location: </label>
        <div>
            <InputText @bind-Value="@registration.location" class="form-control" />
            <ValidationMessage For="@(() => registration.location)" />
        </div>
    </div>

    <div class="form-group">
        <label>Customer Name </label>
        <div>
            <InputSelect @bind-Value="registration.Customerid" class="form-control">
                <option value="">-- Select Customer ID --</option>
                @if (Customers != null)
                {
                    foreach (var customer in Customers)
                    {
                        <option value="@customer.Id">@customer.Customername </option>}
                }
            </InputSelect>
            <ValidationMessage For="@(() => registration.Customerid)" />
        </div>
    </div>

    <div class="form-group">
        <label>Date Created: </label>
        <div>
            <InputDate @bind-Value="@registration.Datein" class="form-control" />
            <ValidationMessage For="@(() => registration.Datein)" />
        </div>
    </div>


    <button type="submit" class="btn btn-success btn-block">
        Insert Registration
    </button>
</EditForm>*@

@code {
    Registration registration = new Registration();
    private IList<Customer> Customers;


    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }

    private async Task CreateRegistration()
    {
        await _client.PostAsJsonAsync(Endpoints.RegistrationsEndpoint, registration);
        _navManager.NavigateTo("/registrations/");
    }
}

