@page "/staffs/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
<h3 class="card title"> Staffs</h3>
<a href="/staffs/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Insert new staff
</a>
<br />
<br />
@if (Staffs == null)
{
    <div class="alert alert-info">Loading Staffs...</div> }
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Staffcontactnumber</th>
                <th>Staffgender</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var staff in Staffs)
            {
                <tr>
                    <td>@staff.Staffname</td>
                    <td>@staff.Staffemail</td>
                    <td>@staff.Staffcontactnumber</td>
                    <td>@staff.Staffgender</td>
                    <td>
                        <a href="/staffs/view/@staff.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/staffs/edit/@staff.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(staff.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>}

@code {
    private List<Staff> Staffs;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
    }

    async Task Delete(int staffId)
    {
        var staff = Staffs.First(q => q.Id == staffId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {staff.Staffname}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.StaffsEndpoint}/{staffId}");
            await OnInitializedAsync();
        }
    }

}
